setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE)
## Write a function that calculates the number of fish after 80 days given any
# starting point
#numberFish <- function(starting_value, days) {
starting_value = 5
days = 20
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
#}
end_values
starting <- read_csv(file = "input.txt", col_names = FALSE)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_tsv(file = "input.txt", col_names = FALSE)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), name_to = "fish")
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish")
View(starting)
?pivot_longer
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
#numberFish <- function(starting_value, days) {
starting_value =  starting
days = 80
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
print(length(end_values))
#}
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
#numberFish <- function(starting_value, days) {
starting_value =  starting
days = 256
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
print(length(end_values))
#}
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
starting_value =  1
days = 256
numberFish <- function(starting_value, days) {
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
nfish = length(end_values)
return nfish
}
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
starting_value =  1
days = 256
numberFish <- function(starting_value, days) {
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
nfish = length(end_values)
return(nfish)
}
numberFish(1,10)
numberFish(1,256)
gc()
numberFish(starting,80)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
starting_value =  1
days = 256
numberFish <- function(starting_value, days) {
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
nfish = length(end_values)
return(nfish)
}
numberFish(starting,80)
10 %% 6
Sys.setenv('R_MAX_VSIZE'=32000000000)
numberFish(starting,256)
starting_values=  starting
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
nindex = c(
sum(starting_values=8),
sum(starting_values=7),
sum(starting_values=6),
sum(starting_values=5),
sum(starting_values=4),
sum(starting_values=3),
sum(starting_values=2),
sum(starting_values=1),
sum(starting_values=0)
)
nindex
starting_values = starting
nindex = c(
sum(starting_values=8),
sum(starting_values=7),
sum(starting_values=6),
sum(starting_values=5),
sum(starting_values=4),
sum(starting_values=3),
sum(starting_values=2),
sum(starting_values=1),
sum(starting_values=0)
)
as.data.frame(table(starting))
nindex = c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
)
nindex
nindex(9)
nindex[9]
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
numberFish <- function(starting_value, days) {
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
nfish = length(end_values)
return(nfish)
}
numberFish(starting,80)
## SOolution Part 2
# Above function does not work as my computer does not have enough memory
# Count the number of times a value runs past 6
numberFish2 <- function(starting_values, days) {
nindex_start = c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
)
for (i in 1:days) {
n8 = nindex[9]
n7 = nindex[1]
n6 = nindex[9] + nindex[2]
n5 = nindex[3]
n4 = nindex[4]
n3 = nindex[5]
n2 = nindex[6]
n1 = nindex[7]
n0 = nindex[8]
nindex[1] = n8
nindex[2] = n7
nindex[3] = n6
nindex[4] = n5
nindex[5] = n4
nindex[6] = n3
nindex[7] = n2
nindex[8] = n1
nindex[9] = n0
}
}
sum(starting)
starting_values=  starting
nindex_start = c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
)
sum(nindex_start)
# Day 6
# FISH!
rm(list = ls())
##
library(tidyverse)
setwd('C:/Users/angus/Documents/GitHub/AdventOfCode2021/Day6')
starting <- read_csv(file = "input.txt", col_names = FALSE) %>%
pivot_longer(cols = everything(), names_to = "fish") %>%
pull(value)
## Write a function that calculates the number of fish after 80 days given any
# starting point
numberFish <- function(starting_value, days) {
end_values = starting_value
for (i in 1:days) {
# Subtracting from age
values  = end_values
#find number of new fish
newFish = length(values) - sum(values!=0)
if (newFish == 0) {
end_values = values - 1
}
if (newFish > 0) {
#Index of where fish are 0
reproducingFish = values == 0
#update values for the next day
values[reproducingFish] = 6
values[!reproducingFish] =  values[!reproducingFish] - 1
end_values = c(values, rep(8,newFish))
}
}
nfish = length(end_values)
return(nfish)
}
numberFish(starting,80)
## SOolution Part 2
# Above function does not work as my computer does not have enough memory
# Count the number of times a value runs past 6
numberFish2 <- function(starting_values, days) {
nindex = c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
)
for (i in 1:days) {
n8 = nindex[9]
n7 = nindex[1]
n6 = nindex[9] + nindex[2]
n5 = nindex[3]
n4 = nindex[4]
n3 = nindex[5]
n2 = nindex[6]
n1 = nindex[7]
n0 = nindex[8]
nindex[1] = n8
nindex[2] = n7
nindex[3] = n6
nindex[4] = n5
nindex[5] = n4
nindex[6] = n3
nindex[7] = n2
nindex[8] = n1
nindex[9] = n0
}
nFish = sum(nindex)
return(nFish)
}
numberFish2(starting,80)
numberFish2(starting,256)
numberFish2(starting,80)
nindex = as.numeric(c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
))
starting_values = starting
nindex = as.numeric(c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
))
nindex
numberFish2 <- function(starting_values, days) {
nindex = as.numeric(c(
sum(starting_values==8),
sum(starting_values==7),
sum(starting_values==6),
sum(starting_values==5),
sum(starting_values==4),
sum(starting_values==3),
sum(starting_values==2),
sum(starting_values==1),
sum(starting_values==0)
))
for (i in 1:days) {
n8 = nindex[9]
n7 = nindex[1]
n6 = nindex[9] + nindex[2]
n5 = nindex[3]
n4 = nindex[4]
n3 = nindex[5]
n2 = nindex[6]
n1 = nindex[7]
n0 = nindex[8]
nindex[1] = n8
nindex[2] = n7
nindex[3] = n6
nindex[4] = n5
nindex[5] = n4
nindex[6] = n3
nindex[7] = n2
nindex[8] = n1
nindex[9] = n0
}
nFish = sum(nindex)
return(nFish)
}
numberFish2(starting,80)
numberFish2(starting,256)
answer2 <- numberFish2(starting,256)
print(answer2)
